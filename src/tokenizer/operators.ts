import { TokenType } from "../types/jsimplint";

export const operators: any = {
  '>>>=': TokenType.ASSIGN_URSH,
  '>>=': TokenType.ASSIGN_RSH,
  '<<=': TokenType.ASSIGN_LSH,
  '|=': TokenType.ASSIGN_BITWISE_OR,
  '^=': TokenType.ASSIGN_BITWISE_XOR,
  '&=': TokenType.ASSIGN_BITWISE_AND,
  '+=': TokenType.ASSIGN_PLUS,
  '-=': TokenType.ASSIGN_MINUS,
  '*=': TokenType.ASSIGN_MUL,
  '/=': TokenType.ASSIGN_DIV,
  '%=': TokenType.ASSIGN_MOD,
  ';': TokenType.SEMICOLON,
  ',': TokenType.COMMA,
  '?': TokenType.HOOK,
  ':': TokenType.COLON,
  '||': TokenType.OR,
  '&&': TokenType.AND,
  '|': TokenType.BITWISE_OR,
  '^': TokenType.BITWISE_XOR,
  '&': TokenType.BITWISE_AND,
  '===': TokenType.STRICT_EQ,
  '==': TokenType.EQ,
  '=': TokenType.ASSIGN,
  '!==': TokenType.STRICT_NE,
  '!=': TokenType.NE,
  '<<': TokenType.LSH,
  '<=': TokenType.LE,
  '<': TokenType.LT,
  '>>>': TokenType.URSH,
  '>>': TokenType.RSH,
  '>=': TokenType.GE,
  '>': TokenType.GT,
  '++': TokenType.INCREMENT,
  '--': TokenType.DECREMENT,
  '+': TokenType.PLUS,
  '-': TokenType.MINUS,
  '*': TokenType.MUL,
  '/': TokenType.DIV,
  '%': TokenType.MOD,
  '!': TokenType.NOT,
  '~': TokenType.BITWISE_NOT,
  '.': TokenType.DOT,
  '[': TokenType.LEFT_BRACKET,
  ']': TokenType.RIGHT_BRACKET,
  '{': TokenType.LEFT_CURLY,
  '}': TokenType.RIGHT_CURLY,
  '(': TokenType.LEFT_PAREN,
  ')': TokenType.RIGHT_PAREN,
};