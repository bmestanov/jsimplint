import { TokenType, MatchMap, Token } from '../types/jsimplint';

export const keywords: MatchMap = {
  'do': TokenType.KEYWORD_DO,
  'if': TokenType.KEYWORD_IF,
  'in': TokenType.KEYWORD_IN,
  'for': TokenType.KEYWORD_FOR,
  'let': TokenType.KEYWORD_LET,
  'new': TokenType.KEYWORD_NEW,
  'try': TokenType.KEYWORD_TRY,
  'var': TokenType.KEYWORD_VAR,
  'case': TokenType.KEYWORD_CASE,
  'else': TokenType.KEYWORD_ELSE,
  'enum': TokenType.KEYWORD_ENUM,
  'eval': TokenType.KEYWORD_EVAL,
  'null': TokenType.KEYWORD_NULL,
  'undefined': TokenType.KEYWORD_UNDEFINED,
  'this': TokenType.KEYWORD_THIS,
  'true': TokenType.KEYWORD_TRUE,
  'void': TokenType.KEYWORD_VOID,
  'with': TokenType.KEYWORD_WITH,
  'await': TokenType.KEYWORD_AWAIT,
  'break': TokenType.KEYWORD_BREAK,
  'catch': TokenType.KEYWORD_CATCH,
  'class': TokenType.KEYWORD_CLASS,
  'const': TokenType.KEYWORD_CONST,
  'false': TokenType.KEYWORD_FALSE,
  'super': TokenType.KEYWORD_SUPER,
  'throw': TokenType.KEYWORD_THROW,
  'while': TokenType.KEYWORD_WHILE,
  'yield': TokenType.KEYWORD_YIELD,
  'delete': TokenType.KEYWORD_DELETE,
  'export': TokenType.KEYWORD_EXPORT,
  'import': TokenType.KEYWORD_IMPORT,
  'public': TokenType.KEYWORD_PUBLIC,
  'return': TokenType.KEYWORD_RETURN,
  'static': TokenType.KEYWORD_STATIC,
  'switch': TokenType.KEYWORD_SWITCH,
  'typeof': TokenType.KEYWORD_TYPEOF,
  'default': TokenType.KEYWORD_DEFAULT,
  'extends': TokenType.KEYWORD_EXTENDS,
  'finally': TokenType.KEYWORD_FINALLY,
  'package': TokenType.KEYWORD_PACKAGE,
  'private': TokenType.KEYWORD_PRIVATE,
  'continue': TokenType.KEYWORD_CONTINUE,
  'debugger': TokenType.KEYWORD_DEBUGGER,
  'function': TokenType.KEYWORD_FUNCTION,
  'arguments': TokenType.KEYWORD_ARGUMENTS,
  'interface': TokenType.KEYWORD_INTERFACE,
  'protected': TokenType.KEYWORD_PROTECTED,
  'implements': TokenType.KEYWORD_IMPLEMENTS,
  'instanceof': TokenType.KEYWORD_INSTANCEOF,
};

export const isKeyword = (token: Token): boolean => !!keywords[token.value];
